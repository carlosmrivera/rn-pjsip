{"version":3,"file":"Call.js","names":["CallState","Call","constructor","id","callId","accountId","localContact","localUri","remoteContact","remoteUri","state","stateText","held","muted","speaker","connectDuration","totalDuration","remoteOfferer","remoteAudioCount","remoteVideoCount","audioCount","videoCount","lastStatusCode","lastReason","media","provisionalMedia","remoteNumber","remoteName","match","_id","_callId","_accountId","_localContact","_localUri","_remoteContact","_remoteUri","_state","_stateText","_held","_muted","_speaker","_connectDuration","_totalDuration","_remoteOfferer","_remoteAudioCount","_remoteVideoCount","_remoteNumber","_remoteName","_audioCount","_videoCount","_lastStatusCode","_lastReason","_media","_provisionalMedia","_constructionTime","Math","round","Date","getTime","getId","getAccountId","getCallId","getTotalDuration","time","offset","getConnectDuration","getFormattedTotalDuration","_formatTime","getFormattedConnectDuration","getLocalContact","getLocalUri","getRemoteContact","getRemoteUri","getRemoteName","getRemoteNumber","getRemoteFormattedNumber","getState","getStateText","isHeld","isMuted","isSpeaker","isTerminated","getRemoteOfferer","getRemoteAudioCount","getRemoteVideoCount","getAudioCount","getVideoCount","getLastStatusCode","getLastReason","getMedia","getProvisionalMedia","seconds","isNaN","hours","parseInt","String","minutes","result"],"sources":["../src/Call.ts"],"sourcesContent":["export enum CallState {\r\n    PJSIP_INV_STATE_NULL = 'PJSIP_INV_STATE_NULL',\r\n    PJSIP_INV_STATE_CALLING = 'PJSIP_INV_STATE_CALLING',\r\n    PJSIP_INV_STATE_INCOMING = 'PJSIP_INV_STATE_INCOMING',\r\n    PJSIP_INV_STATE_EARLY = 'PJSIP_INV_STATE_EARLY',\r\n    PJSIP_INV_STATE_CONNECTING = 'PJSIP_INV_STATE_CONNECTING',\r\n    PJSIP_INV_STATE_CONFIRMED = 'PJSIP_INV_STATE_CONFIRMED',\r\n    PJSIP_INV_STATE_DISCONNECTED = 'PJSIP_INV_STATE_DISCONNECTED',\r\n};\r\n\r\nexport type CallData = {\r\n    id: number\r\n    callId: string\r\n    accountId: number\r\n    localContact: string\r\n    localUri: string\r\n    remoteContact: string\r\n    remoteUri: string\r\n    state: CallState\r\n    stateText: string\r\n    held: boolean\r\n    muted: boolean\r\n    speaker: boolean\r\n    connectDuration: number\r\n    totalDuration: number\r\n    remoteOfferer: number\r\n    remoteAudioCount: number\r\n    remoteVideoCount: number\r\n    remoteNumber: string\r\n    remoteName: string\r\n    audioCount: number\r\n    videoCount: number\r\n    lastStatusCode: string\r\n    lastReason: string\r\n    media: string\r\n    provisionalMedia: string\r\n}\r\n\r\n/**\r\n * This class describes the information and current status of a call.\r\n */\r\nclass Call {\r\n\r\n    _id: number;\r\n    _callId: string;\r\n    _accountId: number;\r\n    _localContact: string;\r\n    _localUri: string;\r\n    _remoteContact: string;\r\n    _remoteUri: string;\r\n    _state: CallState;\r\n    _stateText: string;\r\n    _held: boolean;\r\n    _muted: boolean;\r\n    _speaker: boolean;\r\n    _connectDuration: number;\r\n    _totalDuration: number;\r\n    _remoteOfferer: number;\r\n    _remoteAudioCount: number;\r\n    _remoteVideoCount: number;\r\n    _remoteNumber: string;\r\n    _remoteName: string;\r\n    _audioCount: number;\r\n    _videoCount: number;\r\n    _lastStatusCode: string;\r\n    _lastReason: string;\r\n    _media: string;\r\n    _provisionalMedia: string;\r\n    _constructionTime: number;\r\n\r\n    constructor({\r\n            id,\r\n            callId,\r\n            accountId,\r\n            localContact,\r\n            localUri,\r\n            remoteContact,\r\n            remoteUri,\r\n            state,\r\n            stateText,\r\n            held,\r\n            muted,\r\n            speaker,\r\n            connectDuration,\r\n            totalDuration,\r\n            remoteOfferer,\r\n            remoteAudioCount,\r\n            remoteVideoCount,\r\n            audioCount,\r\n            videoCount,\r\n            lastStatusCode,\r\n            lastReason,\r\n            media,\r\n            provisionalMedia,\r\n        }: CallData) {\r\n        let remoteNumber = null;\r\n        let remoteName = null;\r\n\r\n        if (remoteUri) {\r\n            let match = remoteUri.match(/\"([^\"]+)\" <sip:([^@]+)@/);\r\n\r\n            if (match) {\r\n                remoteName = match[1];\r\n                remoteNumber = match[2];\r\n            } else {\r\n                match = remoteUri.match(/sip:([^@]+)@/);\r\n\r\n                if (match) {\r\n                    remoteNumber = match[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        this._id = id;\r\n        this._callId = callId;\r\n        this._accountId = accountId;\r\n        this._localContact = localContact;\r\n        this._localUri = localUri;\r\n        this._remoteContact = remoteContact;\r\n        this._remoteUri = remoteUri;\r\n        this._state = state;\r\n        this._stateText = stateText;\r\n        this._held = held;\r\n        this._muted = muted;\r\n        this._speaker = speaker;\r\n        this._connectDuration = connectDuration;\r\n        this._totalDuration = totalDuration;\r\n        this._remoteOfferer = remoteOfferer;\r\n        this._remoteAudioCount = remoteAudioCount;\r\n        this._remoteVideoCount = remoteVideoCount;\r\n        this._remoteNumber = remoteNumber;\r\n        this._remoteName = remoteName;\r\n        this._audioCount = audioCount;\r\n        this._videoCount = videoCount;\r\n        this._lastStatusCode = lastStatusCode;\r\n        this._lastReason = lastReason;\r\n\r\n        this._media = media;\r\n        this._provisionalMedia = provisionalMedia;\r\n\r\n        this._constructionTime = Math.round(new Date().getTime() / 1000);\r\n    }\r\n\r\n    /**\r\n     * Call identification.\r\n     * @returns {int}\r\n     */\r\n    getId(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * The account ID where this call belongs.\r\n     * @returns {int}\r\n     */\r\n    getAccountId(): number {\r\n        return this._accountId;\r\n    }\r\n\r\n    /**\r\n     * Dialog Call-ID string.\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getCallId(): string {\r\n        return this._callId;\r\n    }\r\n\r\n\r\n    /**\r\n     * Up-to-date call duration in seconds.\r\n     * Use local time to calculate actual call duration.\r\n     *\r\n     * @public\r\n     * @returns {int}\r\n     */\r\n    getTotalDuration(): number {\r\n        let time = Math.round(new Date().getTime() / 1000);\r\n        let offset = time - this._constructionTime;\r\n\r\n        return this._totalDuration + offset;\r\n    };\r\n\r\n    /**\r\n     * Up-to-date call connected duration (zero when call is not established)\r\n     *\r\n     * @returns {int}\r\n     */\r\n    getConnectDuration(): number {\r\n        if (this._connectDuration < 0 || this._state == \"PJSIP_INV_STATE_DISCONNECTED\") {\r\n            return this._connectDuration;\r\n        }\r\n\r\n        let time = Math.round(new Date().getTime() / 1000);\r\n        let offset = time - this._constructionTime;\r\n\r\n        return this._connectDuration + offset;\r\n    }\r\n\r\n    /**\r\n     * Call duration in \"MM:SS\" format.\r\n     *\r\n     * @public\r\n     * @returns {string}\r\n     */\r\n    getFormattedTotalDuration(): string {\r\n        return this._formatTime(this.getTotalDuration());\r\n    };\r\n\r\n    /**\r\n     * Call duration in \"MM:SS\" format.\r\n     *\r\n     * @public\r\n     * @returns {string}\r\n     */\r\n    getFormattedConnectDuration(): string {\r\n        return this._formatTime(this.getConnectDuration());\r\n    };\r\n\r\n    /**\r\n     * Local Contact.\r\n     * TODO: Provide example\r\n     * @returns {String}\r\n     */\r\n    getLocalContact(): string {\r\n        return this._localContact;\r\n    }\r\n\r\n    /**\r\n     * Local URI.\r\n     * TODO: Provide example\r\n     * @returns {String}\r\n     */\r\n    getLocalUri(): string {\r\n        return this._localUri;\r\n    }\r\n\r\n    /**\r\n     * Remote contact.\r\n     * TODO: Provide example\r\n     * @returns {String}\r\n     */\r\n    getRemoteContact(): string {\r\n        return this._remoteContact;\r\n    }\r\n\r\n    /**\r\n     * Remote URI.\r\n     * TODO: Provide example\r\n     * @returns {String}\r\n     */\r\n    getRemoteUri(): string {\r\n        return this._remoteUri;\r\n    }\r\n\r\n    /**\r\n     * Callee name. Could be null if no name specified in URI.\r\n     * @returns {String}\r\n     */\r\n    getRemoteName(): string {\r\n        return this._remoteName;\r\n    }\r\n\r\n    /**\r\n     * Callee number\r\n     * @returns {String}\r\n     */\r\n    getRemoteNumber(): string {\r\n        return this._remoteNumber;\r\n    }\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    getRemoteFormattedNumber(): string {\r\n        if (this._remoteName && this._remoteNumber) {\r\n            return `${this._remoteName} <${this._remoteNumber}>`;\r\n        } else if (this._remoteNumber) {\r\n            return this._remoteNumber;\r\n        } else {\r\n            return this._remoteUri\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invite session state.\r\n     *\r\n     * PJSIP_INV_STATE_NULL           Before INVITE is sent or received\r\n     * PJSIP_INV_STATE_CALLING        After INVITE is sent\r\n     * PJSIP_INV_STATE_INCOMING       After INVITE is received.\r\n     * PJSIP_INV_STATE_EARLY          After response with To tag.\r\n     * PJSIP_INV_STATE_CONNECTING     After 2xx is sent/received.\r\n     * PJSIP_INV_STATE_CONFIRMED      After ACK is sent/received.\r\n     * PJSIP_INV_STATE_DISCONNECTED   Session is terminated.\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getState(): CallState {\r\n        return this._state;\r\n    }\r\n\r\n    /**\r\n     * Text describing the state.\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getStateText(): string {\r\n        return this._stateText;\r\n    }\r\n\r\n    isHeld(): boolean {\r\n        return this._held;\r\n    }\r\n\r\n    isMuted(): boolean {\r\n        return this._muted;\r\n    }\r\n\r\n    isSpeaker(): boolean {\r\n        return this._speaker;\r\n    }\r\n\r\n    isTerminated(): boolean {\r\n        return this._state === 'PJSIP_INV_STATE_DISCONNECTED';\r\n    }\r\n\r\n    /**\r\n     * Flag if remote was SDP offerer\r\n     * @returns {boolean}\r\n     */\r\n    getRemoteOfferer(): number {\r\n        // TODO Verify whether boolean value\r\n        return this._remoteOfferer;\r\n    }\r\n\r\n    /**\r\n     * Number of audio streams offered by remote.\r\n     * @returns {int}\r\n     */\r\n    getRemoteAudioCount(): number {\r\n        return this._remoteAudioCount;\r\n    }\r\n\r\n    /**\r\n     * Number of video streams offered by remote.\r\n     * @returns {int}\r\n     */\r\n    getRemoteVideoCount(): number {\r\n        return this._remoteVideoCount;\r\n    }\r\n\r\n    /**\r\n     * Number of simultaneous active audio streams for this call. If zero - audio is disabled in this call.\r\n     * @returns {int}\r\n     */\r\n    getAudioCount(): number {\r\n        return this._audioCount;\r\n    }\r\n\r\n    /**\r\n     * Number of simultaneous active video streams for this call. If zero - video is disabled in this call.\r\n     * @returns {*}\r\n     */\r\n    getVideoCount(): number {\r\n        return this._videoCount;\r\n    }\r\n\r\n    /**\r\n     * Last status code heard, which can be used as cause code.\r\n     * Possible values:\r\n     * - PJSIP_SC_TRYING / 100\r\n     * - PJSIP_SC_RINGING / 180\r\n     * - PJSIP_SC_CALL_BEING_FORWARDED / 181\r\n     * - PJSIP_SC_QUEUED / 182\r\n     * - PJSIP_SC_PROGRESS / 183\r\n     * - PJSIP_SC_OK / 200\r\n     * - PJSIP_SC_ACCEPTED / 202\r\n     * - PJSIP_SC_MULTIPLE_CHOICES / 300\r\n     * - PJSIP_SC_MOVED_PERMANENTLY / 301\r\n     * - PJSIP_SC_MOVED_TEMPORARILY / 302\r\n     * - PJSIP_SC_USE_PROXY / 305\r\n     * - PJSIP_SC_ALTERNATIVE_SERVICE / 380\r\n     * - PJSIP_SC_BAD_REQUEST / 400\r\n     * - PJSIP_SC_UNAUTHORIZED / 401\r\n     * - PJSIP_SC_PAYMENT_REQUIRED / 402\r\n     * - PJSIP_SC_FORBIDDEN / 403\r\n     * - PJSIP_SC_NOT_FOUND / 404\r\n     * - PJSIP_SC_METHOD_NOT_ALLOWED / 405\r\n     * - PJSIP_SC_NOT_ACCEPTABLE / 406\r\n     * - PJSIP_SC_PROXY_AUTHENTICATION_REQUIRED / 407\r\n     * - PJSIP_SC_REQUEST_TIMEOUT / 408\r\n     * - PJSIP_SC_GONE / 410\r\n     * - PJSIP_SC_REQUEST_ENTITY_TOO_LARGE / 413\r\n     * - PJSIP_SC_REQUEST_URI_TOO_LONG / 414\r\n     * - PJSIP_SC_UNSUPPORTED_MEDIA_TYPE / 415\r\n     * - PJSIP_SC_UNSUPPORTED_URI_SCHEME / 416\r\n     * - PJSIP_SC_BAD_EXTENSION / 420\r\n     * - PJSIP_SC_EXTENSION_REQUIRED / 421\r\n     * - PJSIP_SC_SESSION_TIMER_TOO_SMALL / 422\r\n     * - PJSIP_SC_INTERVAL_TOO_BRIEF / 423\r\n     * - PJSIP_SC_TEMPORARILY_UNAVAILABLE / 480\r\n     * - PJSIP_SC_CALL_TSX_DOES_NOT_EXIST / 481\r\n     * - PJSIP_SC_LOOP_DETECTED / 482\r\n     * - PJSIP_SC_TOO_MANY_HOPS / 483\r\n     * - PJSIP_SC_ADDRESS_INCOMPLETE / 484\r\n     * - PJSIP_AC_AMBIGUOUS / 485\r\n     * - PJSIP_SC_BUSY_HERE / 486\r\n     * - PJSIP_SC_REQUEST_TERMINATED / 487\r\n     * - PJSIP_SC_NOT_ACCEPTABLE_HERE / 488\r\n     * - PJSIP_SC_BAD_EVENT / 489\r\n     * - PJSIP_SC_REQUEST_UPDATED / 490\r\n     * - PJSIP_SC_REQUEST_PENDING / 491\r\n     * - PJSIP_SC_UNDECIPHERABLE / 493\r\n     * - PJSIP_SC_INTERNAL_SERVER_ERROR / 500\r\n     * - PJSIP_SC_NOT_IMPLEMENTED / 501\r\n     * - PJSIP_SC_BAD_GATEWAY / 502\r\n     * - PJSIP_SC_SERVICE_UNAVAILABLE / 503\r\n     * - PJSIP_SC_SERVER_TIMEOUT / 504\r\n     * - PJSIP_SC_VERSION_NOT_SUPPORTED / 505\r\n     * - PJSIP_SC_MESSAGE_TOO_LARGE / 513\r\n     * - PJSIP_SC_PRECONDITION_FAILURE / 580\r\n     * - PJSIP_SC_BUSY_EVERYWHERE / 600\r\n     * - PJSIP_SC_DECLINE / 603\r\n     * - PJSIP_SC_DOES_NOT_EXIST_ANYWHERE / 604\r\n     * - PJSIP_SC_NOT_ACCEPTABLE_ANYWHERE / 606\r\n     * - PJSIP_SC_TSX_TIMEOUT / PJSIP_SC_REQUEST_TIMEOUT\r\n     * - PJSIP_SC_TSX_TRANSPORT_ERROR / PJSIP_SC_SERVICE_UNAVAILABLE\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getLastStatusCode(): string {\r\n        return this._lastStatusCode;\r\n    }\r\n\r\n    /**\r\n     * The reason phrase describing the last status.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getLastReason(): string {\r\n        return this._lastReason;\r\n    }\r\n\r\n    getMedia(): string {\r\n        return this._media;\r\n    }\r\n\r\n    getProvisionalMedia(): string {\r\n        return this._provisionalMedia;\r\n    }\r\n\r\n    /**\r\n     * Format seconds to \"MM:SS\" format.\r\n     *\r\n     * @public\r\n     * @returns {string}\r\n     */\r\n    _formatTime(seconds: number): string {\r\n        if (isNaN(seconds) || seconds < 0) {\r\n            return \"00:00\";\r\n        }\r\n        var hours = parseInt(String(seconds/3600)) % 24;\r\n        var minutes = parseInt(String(seconds/60)) % 60;\r\n        var result = \"\";\r\n        seconds = seconds % 60;\r\n\r\n        if (hours > 0) {\r\n            result += (hours < 10 ? \"0\" + hours : hours) + \":\";\r\n        }\r\n\r\n        result += (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds  < 10 ? \"0\" + seconds : seconds);\r\n        return result;\r\n    };\r\n}\r\n\r\nexport { Call };\r\n\r\nexport default Call;\r\n"],"mappings":"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"}