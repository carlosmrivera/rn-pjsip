{"version":3,"file":"Endpoint.js","names":["DeviceEventEmitter","NativeModules","EventEmitter","Call","Message","Account","Endpoint","constructor","addListener","_onRegistrationChanged","bind","_onCallReceived","_onCallChanged","_onCallTerminated","_onCallScreenLocked","_onMessageReceived","_onConnectivityChanged","start","configuration","Promise","resolve","reject","PjSipModule","successful","data","accounts","calls","hasOwnProperty","d","push","extra","key","stop","updateStunServers","accountId","stunServerList","changeNetworkConfiguration","changeServiceConfiguration","createAccount","replaceAccount","account","Error","registerAccount","renew","getId","deleteAccount","getAccounts","getAccount","makeCall","destination","callSettings","msgData","_normalize","answerCall","call","hangupCall","declineCall","holdCall","unholdCall","muteCall","unMuteCall","useSpeaker","useEarpiece","xferCall","xferReplacesCall","destCall","redirectCall","dtmfCall","digits","activateAudioSession","deactivateAudioSession","changeOrientation","orientation","orientations","indexOf","JSON","stringify","join","changeCodecSettings","codecSettings","emit","lock","available","startsWith","realm","getRegServer","getDomain"],"sources":["../src/Endpoint.ts"],"sourcesContent":["import React, {DeviceEventEmitter, NativeModules} from 'react-native';\r\nimport {EventEmitter} from 'events'\r\n\r\nimport Call, { CallData } from './Call'\r\nimport Message, { MessageData } from './Message'\r\nimport Account, { AccountConfiguration } from './Account'\r\n\r\nexport type EndpointConfiguration = {\r\n\r\n}\r\n\r\n/**\r\n * SIP headers object, where each key is a header name and value is a header value.\r\n * Example:\r\n * {\r\n *   \"X-Custom-Header\": \"Test Header Value\",\r\n *   \"X-Custom-ID\": \"Awesome Header\"\r\n * }\r\n *\r\n * @typedef {Object} PjSipHdrList\r\n */\r\n\r\n/**\r\n * An additional information to be sent with outgoing SIP message.\r\n * It can (optionally) be specified for example\r\n * with #Endpoint.makeCall(), #Endpoint.answerCall(), #Endpoint.hangupCall(),\r\n * #Endpoint.holdCall() and many more.\r\n *\r\n * @typedef {Object} PjSipMsgData\r\n * @property {String} target_uri - Indicates whether the Courage component is present.\r\n * @property {PjSipHdrList} hdr_list - Additional message headers as linked list.\r\n * @property {String} content_type - MIME type of optional message body.\r\n * @property {String} msg_body - MIME type of optional message body.\r\n */\r\n\r\n/**\r\n * An additional information to be sent with outgoing SIP message.\r\n * It can (optionally) be specified for example\r\n * with #Endpoint.makeCall(), #Endpoint.answerCall(), #Endpoint.hangupCall(),\r\n * #Endpoint.holdCall() and many more.\r\n *\r\n * @typedef {Object} PjSipCallSetttings\r\n * @property {number} flag - Bitmask of #pjsua_call_flag constants.\r\n * @property {number} req_keyframe_method - This flag controls what methods to request keyframe are allowed on the call.\r\n * @property {number} aud_cnt - Number of simultaneous active audio streams for this call. Setting this to zero will disable audio in this call.\r\n * @property {number} vid_cnt - Number of simultaneous active video streams for this call. Setting this to zero will disable video in this call.\r\n */\r\n\r\nexport default class Endpoint extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // Subscribe to Accounts events\r\n        DeviceEventEmitter.addListener('pjSipRegistrationChanged', this._onRegistrationChanged.bind(this));\r\n\r\n        // Subscribe to Calls events\r\n        DeviceEventEmitter.addListener('pjSipCallReceived', this._onCallReceived.bind(this));\r\n        DeviceEventEmitter.addListener('pjSipCallChanged', this._onCallChanged.bind(this));\r\n        DeviceEventEmitter.addListener('pjSipCallTerminated', this._onCallTerminated.bind(this));\r\n        DeviceEventEmitter.addListener('pjSipCallScreenLocked', this._onCallScreenLocked.bind(this));\r\n        DeviceEventEmitter.addListener('pjSipMessageReceived', this._onMessageReceived.bind(this));\r\n        DeviceEventEmitter.addListener('pjSipConnectivityChanged', this._onConnectivityChanged.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Returns a Promise that will be resolved once PjSip module is initialized.\r\n     * Do not call any function while library is not initialized.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    start(configuration: EndpointConfiguration): Promise<{\r\n        accounts: Account[],\r\n        calls: Call[],\r\n    }> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.start(configuration, (successful, data) => {\r\n                if (successful) {\r\n                    let accounts = [];\r\n                    let calls = [];\r\n\r\n                    if (data.hasOwnProperty('accounts')) {\r\n                        for (let d of data['accounts']) {\r\n                            accounts.push(new Account(d));\r\n                        }\r\n                    }\r\n\r\n                    if (data.hasOwnProperty('calls')) {\r\n                        for (let d of data['calls']) {\r\n                            calls.push(new Call(d));\r\n                        }\r\n                    }\r\n\r\n                    let extra = {};\r\n\r\n                    for (let key in data) {\r\n                        if (data.hasOwnProperty(key) && key != \"accounts\" && key != \"calls\") {\r\n                            extra[key] = data[key];\r\n                        }\r\n                    }\r\n\r\n                    resolve({\r\n                        accounts,\r\n                        calls,\r\n                        ...extra\r\n                    });\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    stop(): Promise<void> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.stop((successful, data) => {\r\n                resolve(data);\r\n            });\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    updateStunServers(accountId: number, stunServerList: string[]): Promise<any> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.updateStunServers(accountId, stunServerList, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @param configuration\r\n     * @returns {Promise}\r\n     */\r\n    changeNetworkConfiguration(configuration: any): Promise<any> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.changeNetworkConfiguration(configuration, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param configuration\r\n     * @returns {Promise}\r\n     */\r\n    changeServiceConfiguration(configuration: any): Promise<any> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.changeServiceConfiguration(configuration, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add a new account. If registration is configured for this account, this function would also start the\r\n     * SIP registration session with the SIP registrar server. This SIP registration session will be maintained\r\n     * internally by the library, and application doesn't need to do anything to maintain the registration session.\r\n     *\r\n     * An example configuration:\r\n     * {\r\n     *   name: \"John Doe\",\r\n     *   username: \"100\",\r\n     *   domain: \"pbx.com\",\r\n     *   password: \"XXXXXX\",\r\n     *\r\n     *   proxy: \"192.168.100.1:5060\", // default disabled.\r\n     *   transport: \"TCP\", // default TCP\r\n     *   regServer: \"pbx.com\", // default taken from domain\r\n     *   regTimeout: 300, // default 300\r\n     * }\r\n     *\r\n     * @param {Object} configuration\r\n     * @returns {Promise}\r\n     */\r\n    createAccount(configuration: AccountConfiguration): Promise<Account> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.createAccount(configuration, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(new Account(data));\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    replaceAccount(account: Account, configuration: AccountConfiguration): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    /**\r\n     * Update registration or perform unregistration.\r\n     * If registration is configured for this account, then initial SIP REGISTER will be sent when the account is added.\r\n     * Application normally only need to call this function if it wants to manually update the registration or to unregister from the server.\r\n     *\r\n     * @param {Account} account\r\n     * @param bool renew If renew argument is zero, this will start unregistration process.\r\n     * @returns {Promise}\r\n     */\r\n    registerAccount(account: Account, renew = true): Promise<any> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.registerAccount(account.getId(), renew, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Delete an account. This will unregister the account from the SIP server, if necessary, and terminate server side presence subscriptions associated with this account.\r\n     *\r\n     * @param {Account} account\r\n     * @returns {Promise}\r\n     */\r\n    deleteAccount(account: Account): Promise<any> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.deleteAccount(account.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets list of all accounts\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    getAccounts(): Promise<Account[]> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.getAccounts((successful, data) => {\r\n                if (successful) {\r\n                    let accounts = [];\r\n\r\n                    for (let d of data) {\r\n                        accounts.push(new Account(d));\r\n                    }\r\n\r\n                    resolve(accounts);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets an account by id\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    getAccount(accountId: number): Promise<Account> {\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.getAccount(accountId, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(new Account(data));\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Make an outgoing call to the specified URI.\r\n     * Available call settings:\r\n     * - audioCount - Number of simultaneous active audio streams for this call. Setting this to zero will disable audio in this call.\r\n     * - videoCount - Number of simultaneous active video streams for this call. Setting this to zero will disable video in this call.\r\n     * -\r\n     *\r\n     * @param account {Account}\r\n     * @param destination {String} Destination SIP URI.\r\n     * @param callSettings {PjSipCallSetttings} Outgoing call settings.\r\n     * @param msgSettings {PjSipMsgData} Outgoing call additional information to be sent with outgoing SIP message.\r\n     */\r\n    makeCall(account: Account, destination: string, callSettings?: any, msgData?: any): Promise<Call> {\r\n        destination = this._normalize(account, destination);\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            NativeModules.PjSipModule.makeCall(account.getId(), destination, callSettings, msgData, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(new Call(data));\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Send response to incoming INVITE request.\r\n     *\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    answerCall(call: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.answerCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hangup call by using method that is appropriate according to the call state.\r\n     *\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    hangupCall(call: Call): Promise<any> {\r\n        // TODO: Add possibility to pass code and reason for hangup.\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.hangupCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hangup call by using Decline (603) method.\r\n     *\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    declineCall(call: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.declineCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Put the specified call on hold. This will send re-INVITE with the appropriate SDP to inform remote that the call is being put on hold.\r\n     *\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    holdCall(call: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.holdCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Release the specified call from hold. This will send re-INVITE with the appropriate SDP to inform remote that the call is resumed.\r\n     *\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    unholdCall(call: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.unholdCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    muteCall(call: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.muteCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    unMuteCall(call: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.unMuteCall(call.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise}\r\n     */\r\n    useSpeaker(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.useSpeaker((successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param call {Call} Call instance\r\n     * @returns {Promise}\r\n     */\r\n    useEarpiece(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.useEarpiece((successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initiate call transfer to the specified address.\r\n     * This function will send REFER request to instruct remote call party to initiate a new INVITE session to the specified destination/target.\r\n     *\r\n     * @param account {Account} Account associated with call.\r\n     * @param call {Call} The call to be transferred.\r\n     * @param destination URI of new target to be contacted. The URI may be in name address or addr-spec format.\r\n     * @returns {Promise}\r\n     */\r\n    xferCall(account: Account, call: Call, destination: string): Promise<any> {\r\n        destination = this._normalize(account, destination);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.xferCall(call.getId(), destination, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initiate attended call transfer.\r\n     * This function will send REFER request to instruct remote call party to initiate new INVITE session to the URL of destCall.\r\n     * The party at destCall then should \"replace\" the call with us with the new call from the REFER recipient.\r\n     *\r\n     * @param call {Call} The call to be transferred.\r\n     * @param destCall {Call} The call to be transferred.\r\n     * @returns {Promise}\r\n     */\r\n    xferReplacesCall(call: Call, destCall: Call): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.xferReplacesCall(call.getId(), destCall.getId(), (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Redirect (forward) specified call to destination.\r\n     * This function will send response to INVITE to instruct remote call party to redirect incoming call to the specified destination/target.\r\n     *\r\n     * @param account {Account} Account associated with call.\r\n     * @param call {Call} The call to be transferred.\r\n     * @param destination URI of new target to be contacted. The URI may be in name address or addr-spec format.\r\n     * @returns {Promise}\r\n     */\r\n    redirectCall(account: Account, call: Call, destination: string): Promise<any> {\r\n        destination = this._normalize(account, destination);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.redirectCall(call.getId(), destination, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Send DTMF digits to remote using RFC 2833 payload formats.\r\n     *\r\n     * @param call {Call} Call instance\r\n     * @param digits {String} DTMF string digits to be sent as described on RFC 2833 section 3.10.\r\n     * @returns {Promise}\r\n     */\r\n    dtmfCall(call: Call, digits: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.dtmfCall(call.getId(), digits, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    activateAudioSession(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.activateAudioSession((successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    deactivateAudioSession(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            NativeModules.PjSipModule.deactivateAudioSession((successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    changeOrientation(orientation: (\r\n        'PJMEDIA_ORIENT_UNKNOWN'\r\n        | 'PJMEDIA_ORIENT_ROTATE_90DEG'\r\n        | 'PJMEDIA_ORIENT_ROTATE_270DEG'\r\n        | 'PJMEDIA_ORIENT_ROTATE_180DEG'\r\n        | 'PJMEDIA_ORIENT_NATURAL'\r\n    )): void {\r\n      const orientations = [\r\n        'PJMEDIA_ORIENT_UNKNOWN',\r\n        'PJMEDIA_ORIENT_ROTATE_90DEG',\r\n        'PJMEDIA_ORIENT_ROTATE_270DEG',\r\n        'PJMEDIA_ORIENT_ROTATE_180DEG',\r\n        'PJMEDIA_ORIENT_NATURAL'\r\n      ]\r\n\r\n      if (orientations.indexOf(orientation) === -1) {\r\n        throw new Error(`Invalid ${JSON.stringify(orientation)} device orientation, but expected ${orientations.join(\", \")} values`)\r\n      }\r\n\r\n      NativeModules.PjSipModule.changeOrientation(orientation)\r\n    }\r\n\r\n    changeCodecSettings(codecSettings: {\r\n        'opus/48000/2'?: number,\r\n        'G722/16000/1'?: number,\r\n        'G7221/16000/1'?: number,\r\n        'G7221/32000/1'?: number,\r\n        'GSM/8000/1'?: number,\r\n        'PCMA/8000/1'?: number,\r\n        'PCMU/8000/1'?: number,\r\n        'iLBC/8000/1'?: number,\r\n        'speex/8000/1'?: number,\r\n        'speex/16000/1'?: number,\r\n        'speex/32000/1'?: number,\r\n    }): Promise<any> {\r\n        return new Promise(function(resolve, reject) {\r\n        NativeModules.PjSipModule.changeCodecSettings(codecSettings, (successful, data) => {\r\n                if (successful) {\r\n                    resolve(data);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#registration_changed\r\n     * @private\r\n     * @param data {Object}\r\n     */\r\n    _onRegistrationChanged(data: AccountConfiguration): void {\r\n        /**\r\n         * Fires when registration status has changed.\r\n         *\r\n         * @event Endpoint#registration_changed\r\n         * @property {Account} account\r\n         */\r\n        this.emit(\"registration_changed\", new Account(data));\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#call_received\r\n     * @private\r\n     * @param data {Object}\r\n     */\r\n    _onCallReceived(data: CallData): void {\r\n        /**\r\n         * TODO\r\n         *\r\n         * @event Endpoint#call_received\r\n         * @property {Call} call\r\n         */\r\n        this.emit(\"call_received\", new Call(data));\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#call_changed\r\n     * @private\r\n     * @param data {Object}\r\n     */\r\n    _onCallChanged(data: CallData): void {\r\n        /**\r\n         * TODO\r\n         *\r\n         * @event Endpoint#call_changed\r\n         * @property {Call} call\r\n         */\r\n        this.emit(\"call_changed\", new Call(data));\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#call_terminated\r\n     * @private\r\n     * @param data {Object}\r\n     */\r\n    _onCallTerminated(data: CallData): void {\r\n        /**\r\n         * TODO\r\n         *\r\n         * @event Endpoint#call_terminated\r\n         * @property {Call} call\r\n         */\r\n        this.emit(\"call_terminated\", new Call(data));\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#call_screen_locked\r\n     * @private\r\n     * @param lock bool\r\n     */\r\n    _onCallScreenLocked(lock: boolean): void {\r\n        /**\r\n         * TODO\r\n         *\r\n         * @event Endpoint#call_screen_locked\r\n         * @property bool lock\r\n         */\r\n        this.emit(\"call_screen_locked\", lock);\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#message_received\r\n     * @private\r\n     * @param data {Object}\r\n     */\r\n    _onMessageReceived(data: MessageData): void {\r\n        /**\r\n         * TODO\r\n         *\r\n         * @event Endpoint#message_received\r\n         * @property {Message} message\r\n         */\r\n        this.emit(\"message_received\", new Message(data));\r\n    }\r\n\r\n    /**\r\n     * @fires Endpoint#connectivity_changed\r\n     * @private\r\n     * @param available bool\r\n     */\r\n    _onConnectivityChanged(available: boolean): void {\r\n        /**\r\n         * @event Endpoint#connectivity_changed\r\n         * @property bool available True if connectivity matches current Network settings, otherwise false.\r\n         */\r\n        this.emit(\"connectivity_changed\", available);\r\n    }\r\n\r\n    /**\r\n     * Normalize Destination URI\r\n     *\r\n     * @param account\r\n     * @param destination {string}\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _normalize(account: Account, destination: string): string {\r\n        if (!destination.startsWith(\"sip:\")) {\r\n            let realm = account.getRegServer();\r\n\r\n            if (!realm) {\r\n                realm = account.getDomain();\r\n                /*let s = realm.indexOf(\":\");\r\n\r\n                if (s > 0) {\r\n                    realm = realm.substr(0, s + 1);\r\n                }*/\r\n            }\r\n\r\n            destination = \"sip:\" + destination + \"@\" + realm;\r\n        }\r\n\r\n        return destination;\r\n    }\r\n    // setUaConfig(UaConfig value)\r\n    // setMaxCalls\r\n    // setUserAgent\r\n    // setNatTypeInSdp\r\n\r\n    // setLogConfig(LogConfig value)\r\n    // setLevel\r\n}\r\n"],"mappings":"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"}