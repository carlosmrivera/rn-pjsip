{"version":3,"file":"AccountRegistration.js","names":["AccountRegistration","constructor","status","statusText","active","reason","_status","_statusText","_active","_reason","getStatus","getStatusText","isActive","getReason","toJson"],"sources":["../src/AccountRegistration.ts"],"sourcesContent":["/**\r\n * Account registration information. Application can query the registration info\r\n * by calling account.getRegistration().\r\n */\r\nexport default class AccountRegistration {\r\n    _status: string;\r\n    _statusText: string;\r\n    _active: boolean;\r\n    _reason: string;\r\n\r\n    constructor({status, statusText, active, reason}) {\r\n        this._status = status;\r\n        this._statusText = statusText;\r\n        this._active = active;\r\n        this._reason = reason;\r\n    }\r\n\r\n    /**\r\n     * Last registration status code (SIP status codes according to RFC 3261).\r\n     * If status code is empty, the account is currently not registered. Any other value indicates the SIP\r\n     * status code of the registration.\r\n     *\r\n     * @returns {string|null}\r\n     */\r\n    getStatus(): string | null {\r\n        return this._status;\r\n    }\r\n\r\n    /**\r\n     * String describing the registration status.\r\n     *\r\n     * @returns {string|null}\r\n     */\r\n    getStatusText(): string | null {\r\n        return this._statusText;\r\n    }\r\n\r\n    /**\r\n     * Flag to tell whether this account is currently registered\r\n     * (has active registration session).\r\n     *\r\n     * @returns boolean\r\n     */\r\n    isActive(): boolean {\r\n        return this._active;\r\n    }\r\n\r\n    /**\r\n     * Reason phrase received.\r\n     *\r\n     * @returns {String|null}\r\n     */\r\n    getReason(): string | null {\r\n        return this._reason;\r\n    }\r\n\r\n    toJson(): {\r\n        status: string,\r\n        statusText: string,\r\n        active: boolean,\r\n        reason: string,\r\n    } {\r\n        return  {\r\n            status: this._status,\r\n            statusText: this._statusText,\r\n            active: this._active,\r\n            reason: this._reason\r\n        }\r\n    }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,eAAe,MAAMA,mBAAN,CAA0B;EAMrCC,WAAW,CAAC;IAACC,MAAD;IAASC,UAAT;IAAqBC,MAArB;IAA6BC;EAA7B,CAAD,EAAuC;IAC9C,KAAKC,OAAL,GAAeJ,MAAf;IACA,KAAKK,WAAL,GAAmBJ,UAAnB;IACA,KAAKK,OAAL,GAAeJ,MAAf;IACA,KAAKK,OAAL,GAAeJ,MAAf;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIK,SAAS,GAAkB;IACvB,OAAO,KAAKJ,OAAZ;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACIK,aAAa,GAAkB;IAC3B,OAAO,KAAKJ,WAAZ;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIK,QAAQ,GAAY;IAChB,OAAO,KAAKJ,OAAZ;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACIK,SAAS,GAAkB;IACvB,OAAO,KAAKJ,OAAZ;EACH;;EAEDK,MAAM,GAKJ;IACE,OAAQ;MACJZ,MAAM,EAAE,KAAKI,OADT;MAEJH,UAAU,EAAE,KAAKI,WAFb;MAGJH,MAAM,EAAE,KAAKI,OAHT;MAIJH,MAAM,EAAE,KAAKI;IAJT,CAAR;EAMH;;AAhEoC"}